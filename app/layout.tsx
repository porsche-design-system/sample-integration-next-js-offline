import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { PorscheDesignSystemProvider } from '@porsche-design-system/components-react/ssr';
import {
  getComponentChunkLinks,
  getFontFaceStyles,
  getFontLinks,
  getIconLinks,
  getInitialStyles,
  getMetaTagsAndIconLinks,
} from '@porsche-design-system/components-react/partials';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Next.js",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
    <head>
      <base href={process.env.NEXT_PUBLIC_BASE_PATH ? `${process.env.NEXT_PUBLIC_BASE_PATH}/` : '/'} />
      {/* necessary for SSR support, injects stylesheet which defines visibility of pre-hydrated PDS components */}
      {getInitialStyles({ format: 'jsx' })}
      {/* injects stylesheet which defines Porsche Next CSS font-face definition (=> minimize FOUT) */}
      {getFontFaceStyles({ format: 'jsx' })}
      {/* preloads Porsche Next font (=> minimize FOUT) */}
      {getFontLinks({ format: 'jsx' })}
      {/* preloads PDS component core chunk from CDN for PDS component hydration (=> improve loading performance) */}
      {getComponentChunkLinks({ format: 'jsx' })}
      {/* preloads Porsche icons (=> minimize FOUC) */}
      {getIconLinks({ format: 'jsx' })}
      {/* injects favicon, apple touch icons, android touch icons, etc. */}
      {getMetaTagsAndIconLinks({ appTitle: 'Porsche', format: 'jsx' })}
    </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <PorscheDesignSystemProvider>{children}</PorscheDesignSystemProvider>
      </body>
    </html>
  );
}
